{"version":3,"sources":["components/jumbotron.js","utils/api.js","components/searchbar.js","components/table.js","App.js","reportWebVitals.js","index.js"],"names":["Jumbotron","className","id","API","ApiSearch","axios","get","SearchBar","props","onChange","handleInputChange","value","search","name","type","placeholder","Table","state","sortOrder","results","event","target","searchTerm","toLowerCase","setState","sortByFName","sortedEmployees","sort","a","b","first","reverse","sortByLName","last","then","res","data","console","log","catch","err","this","onClick","map","item","includes","src","picture","thumbnail","alt","phone","email","DateFormat","dob","date","login","uuid","React","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6c4e8d2e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../styles/jumbotron.css\"\r\n\r\nfunction Jumbotron() {\r\nreturn (\r\n<div>\r\n    <div className=\"jumbotron jumbotron-fluid\" id=\"jumboTron\">\r\n    <div className=\"container\">\r\n        <h1 className=\"display-4\"><i className=\"fas fa-user-friends\"></i> <b>Company Directory</b></h1>\r\n        <p className=\"lead\">Search by first or last name or select a column heading to sort.</p>\r\n    </div>\r\n    </div>\r\n</div>\r\n);\r\n}\r\n\r\nexport default Jumbotron;","import axios from 'axios';\r\n\r\nconst url = 'https://randomuser.me/api/?results=100&nat=au';\r\n\r\n//api call\r\n\r\nconst API = { ApiSearch: function () {\r\n    return axios.get(url)\r\n    }}\r\n\r\nexport default API;","import React from \"react\";\r\n//import DataAreaContext from \"../utils/dataAreaContext.js\";\r\nimport \"../styles/searchbar.css\"\r\n\r\nconst SearchBar = (props) => {\r\n//const context = useContext(DataAreaContext)\r\n\r\nreturn (\r\n    <form>\r\n    <div className=\"form-group search-widget\">\r\n    <div className=\"input-group mb-3\">\r\n\r\n        <input\r\n        onChange={props.handleInputChange}\r\n        value={props.search}\r\n        name=\"search\"\r\n        type=\"text\"\r\n        className=\"form-control\"\r\n        placeholder='Search directory for Employee'\r\n        id=\"search\"\r\n        />\r\n    </div>\r\n    </div>\r\n    </form>\r\n);\r\n}\r\nexport default SearchBar;","import React from \"react\";\r\nimport API from \"../utils/api.js\"\r\nimport Search from \"./searchbar\"\r\nimport \"../styles/table.css\"\r\n\r\n//npm package to reformat DOB\r\nimport DateFormat from 'dateformat';\r\n\r\nclass Table extends React.Component {\r\n\r\nstate = {\r\n    sortOrder: \"\",\r\n    results: [],\r\n    search: \"\"\r\n}\r\n\r\n  //Api call for randomuser.me\r\ncomponentDidMount() {\r\n    API.ApiSearch()\r\n    .then(res => {\r\n        this.setState({ results: res.data.results })\r\n        console.log(this.state.results)\r\n    }).catch(err => console.log(err))\r\n}\r\n\r\n\r\n  //Handle input in search bar \r\nhandleInputChange = event => {\r\n\r\n    if (event.target.name === \"search\") {\r\n    const searchTerm = event.target.value.toLowerCase();\r\n    this.setState({\r\n        search: searchTerm\r\n    })\r\n    }\r\n}\r\n\r\n  //Sort by first name\r\nsortByFName = () => {\r\n    const sortedEmployees = this.state.results.sort((a, b) => {\r\n    if (b.name.first > a.name.first) {\r\n        return -1\r\n    }\r\n    if (a.name.first > b.name.first) {\r\n        return 1\r\n    }\r\n    return 0;\r\n    });\r\n\r\n    if (this.state.sortOrder === \"DESC\") {\r\n    sortedEmployees.reverse();\r\n    this.setState({ sortOrder: \"ASC\" });\r\n    } else {\r\n    this.setState({ sortOrder: \"DESC\" });\r\n    }\r\n    this.setState({ results: sortedEmployees })\r\n}\r\n\r\n  //Sort by last name \r\nsortByLName = () => {\r\n    const sortedEmployees = this.state.results.sort((a, b) => {\r\n    if (b.name.last > a.name.last) {\r\n        return -1\r\n    }\r\n    if (a.name.last > b.name.last) {\r\n        return 1\r\n    }\r\n    return 0;\r\n    });\r\n    if (this.state.sortOrder === \"DESC\") {\r\n    sortedEmployees.reverse();\r\n    this.setState({ sortOrder: \"ASC\" });\r\n    } else {\r\n    this.setState({ sortOrder: \"DESC\" });\r\n    }\r\n    this.setState({ results: sortedEmployees })\r\n}\r\n\r\n  //Render items \r\nrender() {\r\n    return (\r\n    <div>\r\n        <Search handleInputChange={this.handleInputChange}\r\n        search={this.state.search} />\r\n\r\n        <div className=\"table-responsive\">\r\n        <table className=\"table table-striped table-resposive text-center table-hover\">\r\n            <thead>\r\n            <tr>\r\n                <th>Image</th>\r\n                <th>First Name <span className=\"downArrow\" onClick={this.sortByFName}></span></th>\r\n                <th>Last Name <span className=\"downArrow\" onClick={this.sortByLName}></span></th>\r\n                <th>Phone</th>\r\n                <th>Email</th>\r\n                <th>DOB </th>\r\n            </tr>\r\n            </thead>\r\n\r\n            { //First Name sort\r\n            this.state.results && this.state.results.map(item =>\r\n                item.name.first.toLowerCase().includes(this.state.search) ?\r\n                <tbody key={item.login.uuid}>\r\n                    <tr>\r\n                    <td ><img src={item.picture.thumbnail} className=\"rounded-circle\" alt=\"thumbnail\" /></td>\r\n                    <td >{item.name.first}</td>\r\n                    <td >{item.name.last}</td>\r\n                    <td >{item.phone}</td>\r\n                    <td >{item.email}</td>\r\n                    <td>{DateFormat(item.dob.date, \"mediumDate\")}</td>  \r\n                    </tr>\r\n                </tbody>\r\n\r\n                :\r\n                  //Last Name sort\r\n                item.name.last.toLowerCase().includes(this.state.search) ?\r\n                    <tbody key={item.login.uuid}>\r\n                    <tr>\r\n                    <td ><img src={item.picture.thumbnail} className=\"rounded-circle\" alt=\"thumbnail\" /></td>\r\n                        <td >{item.name.first}</td>\r\n                        <td >{item.name.last}</td>\r\n                        <td >{item.phone} </td>\r\n                        <td >{item.email}</td>\r\n                        <td>{DateFormat(item.dob.date, \"mediumDate\")}</td>  \r\n                    </tr>\r\n                    </tbody>\r\n                    :\r\n                    null\r\n            )}\r\n        </table>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n}\r\n\r\nexport default Table;","import React from \"react\";\nimport Jumbotron from \"./components/jumbotron\";\nimport Table from \"./components/table\"; \n\nfunction App() {\n  return (\n    <div>\n    <Jumbotron/>\n    <Table />\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}